// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Bitcoin.Api.Client.AutoGenerated.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MultipleTransferRequest
    {
        /// <summary>
        /// Initializes a new instance of the MultipleTransferRequest class.
        /// </summary>
        public MultipleTransferRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MultipleTransferRequest class.
        /// </summary>
        public MultipleTransferRequest(System.Guid? transactionId = default(System.Guid?), string asset = default(string), string destination = default(string), int? feeRate = default(int?), decimal? fixedFee = default(decimal?), IList<ToOneAddress> sources = default(IList<ToOneAddress>))
        {
            TransactionId = transactionId;
            Asset = asset;
            Destination = destination;
            FeeRate = feeRate;
            FixedFee = fixedFee;
            Sources = sources;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionId")]
        public System.Guid? TransactionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "asset")]
        public string Asset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "destination")]
        public string Destination { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "feeRate")]
        public int? FeeRate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fixedFee")]
        public decimal? FixedFee { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sources")]
        public IList<ToOneAddress> Sources { get; set; }

    }
}
